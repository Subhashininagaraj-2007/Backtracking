class Solution {
        ArrayList<String> ans = new ArrayList<>(); 
    void getPath(int[][] maze, int n, int i, int j, String path, int[][] vis) {
        if (i < 0 || j < 0 || i >= n || j >= n || vis[i][j] == 1 || maze[i][j] == 0) {
            return;
        }
        if (i == n - 1 && j == n - 1) {
            ans.add(path);
            return;
        }
        vis[i][j] = 1;
        getPath(maze, n, i + 1, j, path + "D", vis);
        getPath(maze, n, i - 1, j, path + "U", vis);
        getPath(maze, n, i, j - 1, path + "L", vis);
        getPath(maze, n, i, j + 1, path + "R", vis);
        vis[i][j] = 0;
    }
    
    public ArrayList<String> ratInMaze(int[][] maze) {
        int n = maze.length;
        int[][] vis = new int[n][n];
        ans.clear();
        
        if (maze[0][0] == 1) {
            getPath(maze, n, 0, 0, "", vis);
        }
        
        Collections.sort(ans); 
        return ans;
    }
}
